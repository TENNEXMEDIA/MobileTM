<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Hexagon Cascade with A1, A2, A3 and S1A">
    <title>Hexagon Cascade</title>

    <style>
        /* General Styles */
        body, html {
            margin: 0;
            padding: 0;
            height: 100%;
            width: 100%;
            background-color: white;
            overflow: hidden;
        }

        /* Hexagon Container and Shape */
        .hexagon-container {
            position: absolute;
            width: 15vh;  /* Set width based on viewport height */
            height: 15vh; /* Set height based on viewport height */
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .hexagon {
            background: black;
            clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
            width: 100%;
            height: 100%;
            transition: background 0.5s ease-in-out, transform 0.5s ease-in-out;
            cursor: pointer;
        }

        .hexagon:hover {
            transform: scale(1.1); /* Add a zoom effect on hover */
        }

        /* Text inside hexagons */
        .hexagon span {
            font-family: 'Bodoni Moda', serif;
            font-size: 2vh; /* Text size based on viewport height */
            color: white;
            transform: rotate(90deg);
        }

        /* Hexagon S1A - Initially Hidden */
        #container-S1A {
            position: absolute;
            top: 200px;  /* Example: Adjust manually */
            left: 200px; /* Example: Adjust manually */
            opacity: 0;  /* Hidden by default */
            transition: opacity 0.5s ease-in-out;
        }

        #hexagon-S1A {
            background: white; /* S1A starts as white */
            clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
            width: 100%;
            height: 100%;
            transition: background 0.5s ease-in-out;
        }

        /* Positions for A1, A2, and A3 */
        #container-A1 {
            top: 10vh;  /* Adjusted to `vh` for consistency */
            left: 10vh;
        }

        #container-A2 {
            top: 10vh;
            left: 35vh;  /* Distance from A1 */
        }

        #container-A3 {
            top: 10vh;
            left: 60vh;  /* Distance from A2 */
        }

    </style>
</head>
<body>

    <!-- Hexagon A1 -->
    <div class="hexagon-container" id="container-A1">
        <div class="hexagon" id="hexagon-A1">
            <span id="hexagon-A1-text">More</span>
        </div>
    </div>

    <!-- Hexagon A2 -->
    <div class="hexagon-container" id="container-A2">
        <div class="hexagon" id="hexagon-A2">
            <span>More</span>
        </div>
    </div>

    <!-- Hexagon A3 -->
    <div class="hexagon-container" id="container-A3">
        <div class="hexagon" id="hexagon-A3">
            <span>More</span>
        </div>
    </div>

    <!-- Hexagon S1A (Initially Hidden) -->
    <div class="hexagon-container" id="container-S1A">
        <div class="hexagon" id="hexagon-S1A"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Grab the elements
            const hexagonA1 = document.getElementById('hexagon-A1');
            const hexagonA1Text = document.getElementById('hexagon-A1-text');
            const hexagonS1A = document.getElementById('hexagon-S1A');
            const containerS1A = document.getElementById('container-S1A');

            // Ensure all elements exist
            if (!hexagonA1 || !hexagonA1Text || !hexagonS1A || !containerS1A) {
                console.error("One or more elements not found.");
                return;
            }

            let isVisible = false;

            // Function to hide text in A1 and show S1A
            function toggleHexagons() {
                if (!isVisible) {
                    hexagonA1Text.style.display = 'none';     // Hide A1 text

                    // Calculate position of S1A relative to A1
                    const rectA1 = hexagonA1.getBoundingClientRect();  // Get A1's position
                    const offsetX = 50;  // Offset distance from A1 in pixels
                    const offsetY = 100; // Offset distance from A1 in pixels

                    containerS1A.style.top = `${rectA1.top + window.scrollY + offsetY}px`;   // Position S1A relative to A1
                    containerS1A.style.left = `${rectA1.left + window.scrollX + offsetX}px`; // Position S1A relative to A1

                    containerS1A.style.opacity = 1;           // Make S1A visible
                    hexagonS1A.style.background = 'black';    // Change S1A color to black
                }
                isVisible = !isVisible;
            }

            // Attach click event to A1
            hexagonA1.addEventListener('click', toggleHexagons);
        });
    </script>

</body>
</html>
